finish testing split add on category value > split value
db.__createDB__, use fs for file operations (file exists if we are here)
GUIMainWin.newBD does not work when selected opened file
split.rm dose not work

add trans cell replace (replace whole cell if string found)

add split arrange?

split.merge to be removed?
split.validateSplit to be removed?
cat.__addAbove__ to be removed?

handle empty categories with filters (ask user), now DB do not delete nothing
cat.__update__()
handle empty splits with filters (ask user), now DB do not delete nothing
split.setImpCats()
handle categories impacted by trans (ask user)
cat.__update__()


add split of single operation. Must be treated separately and splited BEFORE category



set min max dates when starting split calendar

see all data when on grandpa and "show all data" clicked

add number of operations to stat window table


reverse log and pretify

add statistics on front tab


what to do with short filters (add (?!<=[:alphanumeric:]))?

warn when closing without commited import



when importing wrong bank file (csv), imp_status is not updated (remains like in import mode)


create events (like trips)



save db when import confirmed
when start empty, create DB
file operation are enigmatic at best
BIG ONE: move from file aproach to user aproach with one db for different users
give information what db is opened
remember last open file location




SPLIT:
- ask to confirm when removeing cat referenced by split
- remove split from context menu on grandpa??
\/ when spliting with cost higher than some operations inside cat....do something?
\/ problem when spliting cat with kids
\/ allow empty dates
\/ renaming categories, rename also split (also filters)
\/ adding filter to split category....
\/ removing parent cat, remove also split (split ref to cat)
\/ most commont items dissapear after split (splitting somewhere change op col types to objects, strings are excepted group_data())
- spliting single operation is completely not clear


check integrity (cat categories vs. tree categories)???






3 plot .....

1.SAVE state
Saving the user's main window settings begins with some familiar code for restoring the window's size and position and the state of any toolbars and dock windows it may have. Splitters too have a state, and this is restored and saved in the same way as the main window's state.
def closeEvent(self, event):
    if self.okToContinue():
        settings = QSettings()
        settings.setValue("MainWindow/Size", QVariant(self.size()))
        settings.setValue("MainWindow/Position",QVariant(self.pos()))
        settings.setValue("MainWindow/State",QVariant(self.saveState()))
        settings.setValue("MessageSplitter", QVariant(self.messageSplitter.saveState()))
        settings.setValue("MainSplitter", QVariant(self.mainSplitter.saveState()))


2. personal account numbers db (account number formatted in different ways: 12345678... or 1234 5678...)




