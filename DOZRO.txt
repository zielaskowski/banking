user startdate change
set min on enddate

set


remove filter orig

speedup db updates by numpy?


add trans cell replace (replace whole cell if string found)

when spliting with higher val then available should reject rather the modify val

warn when changing filters during import (changes will stay if commited)


COLORING and ICONS
handle empty categories with filters (ask user), now DB do not delete nothing
handle empty splits with filters (ask user), now DB do not delete nothing
handle categories impacted by trans (ask user)



find a way to read currently set language and adjust locale


see all data when on grandpa and "show all data" clicked

add number of operations to stat window table


reverse log and pretify
review all messages
add statistics on front tab


what to do with short filters (add (?!<=[:alphanumeric:]))?

warn when closing without commited import

when importing wrong bank file (csv), imp_status is not updated (remains like in import mode)

create events (like trips)


save db when import confirmed
when start empty, create DB
BIG ONE: move from file aproach to user aproach with one db for different users
give information what db is opened
remember last open file location






check integrity (cat categories vs. tree categories)???






3 plot .....

1.SAVE state
Saving the user's main window settings begins with some familiar code for restoring the window's size and position and the state of any toolbars and dock windows it may have. Splitters too have a state, and this is restored and saved in the same way as the main window's state.
def closeEvent(self, event):
    if self.okToContinue():
        settings = QSettings()
        settings.setValue("MainWindow/Size", QVariant(self.size()))
        settings.setValue("MainWindow/Position",QVariant(self.pos()))
        settings.setValue("MainWindow/State",QVariant(self.saveState()))
        settings.setValue("MessageSplitter", QVariant(self.messageSplitter.saveState()))
        settings.setValue("MainSplitter", QVariant(self.mainSplitter.saveState()))


2. personal account numbers db (account number formatted in different ways: 12345678... or 1234 5678...)




